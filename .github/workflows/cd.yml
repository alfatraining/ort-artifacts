name: CD
on:
  workflow_dispatch:
    inputs:
      onnxruntime-ref:
        type: string
        description: "ONNX Runtime repository reference, e.g., 'v1.22.2' or 'main'"
        default: "v1.23.1"
      target-preset:
        type: choice
        description: "Select a predefined target"
        required: false
        default: "windows-mt-x86_64-static"
        options:
          - "all"
          - linux-aarch64-dylib
          - linux-aarch64-static
          - linux-x86_64-dylib
          - linux-x86_64-static
          - macos-aarch64-dylib
          - macos-aarch64-static
          - macos-x86_64-dylib
          - macos-x86_64-static
          - windows-md-x86_64-dylib
          - windows-md-x86_64-static
          - windows-mt-x86_64-dylib
          - windows-mt-x86_64-static
          - emscripten-wasm32
          - ios-aarch64-dylib
          - ios-aarch64-static
          - ios-simulator-aarch64-dylib
          - ios-simulator-aarch64-static
          - android-aarch64-dylib
          - android-aarch64-static
      target-custom:
        type: string
        description: "Custom target filter (overrides preset if specified, supports substring matching)"
        required: false
      buildtype:
        type: choice
        required: true
        default: 'Both'
        options:
          - 'Both'
          - 'Release'
          - 'Debug'
      publish:
        type: boolean
        description: "Publish as draft release on GitHub."
        required: false
        default: false

env:
  GCC_VERSION: '11'
  CMAKE_VERSION: '3.28'
  PYTHON_VERSION: '3.10'
  XCODE_VERSION: '14.3.1'

jobs:
  build-debug:
    if: inputs.buildtype == 'Both' || inputs.buildtype == 'Debug'
    uses: ./.github/workflows/_build.yml
    with:
      onnxruntime-ref: ${{ inputs.onnxruntime-ref }}
      buildtype: Debug
      target-preset: ${{ inputs.target-preset }}
      target-custom: ${{ inputs.target-custom }}

  build-release:
    if: inputs.buildtype == 'Both' || inputs.buildtype == 'Release'
    uses: ./.github/workflows/_build.yml
    with:
      onnxruntime-ref: ${{ inputs.onnxruntime-ref }}
      buildtype: Release
      target-preset: ${{ inputs.target-preset }}
      target-custom: ${{ inputs.target-custom }}

  publish:
    if: inputs.publish && always() && !cancelled() && !contains(needs.*.result, 'failure')
    needs: [build-debug, build-release]
    uses: ./.github/workflows/_publish.yml
    with:
      onnxruntime-ref: ${{ inputs.onnxruntime-ref }}
